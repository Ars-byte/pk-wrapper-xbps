#!/usr/bin/env python3

import subprocess
import sys
import os


def run_cmd(cmd):
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        if result.stdout:
            print(result.stdout.strip())
    except subprocess.CalledProcessError as e:
        print(f"❌ Error ejecutando: {' '.join(cmd)}", file=sys.stderr)
        print(f"   Código de salida: {e.returncode}", file=sys.stderr)
        print(f"   Error: {e.stderr.strip()}", file=sys.stderr)
        sys.exit(e.returncode)
    except FileNotFoundError:
        print(f"❌ Comando no encontrado: {cmd[0]}. ¿Está instalado?", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"❌ Error inesperado: {e}", file=sys.stderr)
        sys.exit(1)


def pk_install(*packages):
    if not packages:
        print("Usage: pk install <paquete1> [paquete2] ...")
        sys.exit(1)
    cmd = ["sudo","xbps-install", "-y"] + list(packages)
    print(f"📦 Instalando: {' '.join(packages)}")
    run_cmd(cmd)

def pk_remove(*packages):
    if not packages:
        print("Usage: pk remove <paquete1> [paquete2] ...")
        sys.exit(1)
    cmd = ["sudo","xbps-remove", "-y"] + list(packages)
    print(f"🗑️  Eliminando: {' '.join(packages)}")
    run_cmd(cmd)

def pk_query(pattern=None):
    if pattern:
        cmd = ["xbps-query", "-Rs", pattern]
        print(f"🔍 Buscando paquetes que coincidan con: '{pattern}'")
    else:
        cmd = ["sudo","xbps-query", "-Rs"]
        print("📋 Paquetes instalados:")
    run_cmd(cmd)

def pk_rindex():
    print("🔄 Actualizando índice de paquetes local...")
    run_cmd(["sudo","xbps-rindex", "-a"])

def pk_up():
    print("🚀 Actualizando todo el sistema: xbps-install -Syu")
    run_cmd(["sudo", "xbps-install", "-Syu"])

def main():
    if len(sys.argv) < 2:
        print("""
📌 Comando 'pk' - Interfaz simplificada para xbps en Void Linux

Uso:
  pk install   <paquete> [...]     Instala paquetes (con -y)
  pk remove    <paquete> [...]     Elimina paquetes (con -y)
  pk query     [patrón]            Lista paquetes instalados o busca por patrón
  pk rindex                      Actualiza el índice local de paquetes
  pk up                          Actualiza todo el sistema (-Syu)

Ejemplos:
  pk install firefox vim
  pk remove firefox
  pk query vim
  pk rindex
  pk up
""")
        sys.exit(1)

    command = sys.argv[1].lower()

    if command == "install":
        pk_install(*sys.argv[2:])
    elif command == "remove":
        pk_remove(*sys.argv[2:])
    elif command == "query":
        pk_query(*sys.argv[2:] if len(sys.argv) > 2 else None)
    elif command == "rindex":
        pk_rindex()
    elif command == "up":
        pk_up()
    else:
        print(f"❌ Comando desconocido: {command}")
        print("Usa: pk install | remove | query | rindex | up")
        sys.exit(1)

if __name__ == "__main__":
    main()
